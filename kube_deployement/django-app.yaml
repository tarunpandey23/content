apiVersion: apps/v1
kind: Deployment
metadata:
  name: django
  labels:
    app: django
spec:
  replicas: 1
  selector:
    matchLabels:
      name: django
  template:
    metadata:
      labels:
        name: django
    spec:
      containers:
        - name: django
          image: tarun2303/devops:latest
         # command: ['/bin/bash', 'runserver.sh'] 
          imagePullPolicy: Always
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_HOST 
              value: "postgres"

        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "postgres"
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume-mount
      volumes:
        - name: postgres-volume-mount
          persistentVolumeClaim:
            claimName: postgres-pv-claim  
---
# START Service
apiVersion: v1
kind: Service
metadata:
  name: django
  labels:
    app: django
spec:
  type: LoadBalancer
  ports:
    - port: 80 #port that the service exposes
      targetPort: 8000 #port that the app is receiving requests from via the pod
  selector:
    name: django
# END SERVICE
