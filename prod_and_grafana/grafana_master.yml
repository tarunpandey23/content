version: '3.8'

services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - "9100:9100"
    networks:
      - grafana_monitoring

  prometheus:
    image: prom/prometheus:latest
    user: "1000"
    env_file:
      - ./.env
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    networks:
      - grafana_monitoring
  grafana:
    image: grafana/grafana:latest
    user: "1000"
    env_file:
      - ./.env
    container_name: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana:/var/lib/grafana
    networks:
      - grafana_monitoring

  redis:
    environment:
      - ENABLE_OVERCOMMIT_MEMORY=true
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - grafana_monitoring

networks:
  grafana_monitoring:
    driver: bridge
volumes:
  prometheus_data: {}
